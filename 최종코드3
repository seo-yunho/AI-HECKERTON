import random, event, time, cyberpi

# 와이파이 설정
wifi_ssid = 'JJ.iptime'
wifi_password = '01049473955'

# 클라우드 서비스 및 음성인식 설정
cloud_key = 'af7f5c137c0942d493f7b01df24fc442'
speech_recognition_url = 'http://msapi.mblock.cc/ms/bing_speech/interactive'

# 와이파이 연결
cyberpi.wifi.connect(wifi_ssid, wifi_password)
while not cyberpi.wifi.is_connect():
    pass
cyberpi.led.show('r o b y c')
time.sleep(1)
cyberpi.led.off(id='all')

# 클라우드 서비스 및 음성인식 설정
cyberpi.cloud.setkey(cloud_key)
cyberpi.speech.set_recognition_address(url=speech_recognition_url)

# 전진 방향을 추적하기 위한 전역 변수
moving_forward = True
emergency_detected = False
last_voice_command_time = time.time()
last_weather_update_time = time.time()  # 날씨 정보 업데이트 시간 추적

# 날씨 및 공기질 정보 가져오기 및 표시
def get_weather_and_air_quality():
    global last_weather_update_time
    current_time = time.time()

    if current_time - last_weather_update_time > 10:  # 10초마다 업데이트

    
        # 날씨 정보
        cyberpi.console.println(cyberpi.cloud.weather('weather', '1835553'))
        cyberpi.console.print("최고온도: ")
        cyberpi.console.println(cyberpi.cloud.weather('max_temp', '1835553'))
        cyberpi.console.print("최저온도: ")
        cyberpi.console.println(cyberpi.cloud.weather('min_temp', '1835553'))
        cyberpi.console.print("습도: ")
        cyberpi.console.println(cyberpi.cloud.weather('humidity', '1835553'))

        # 공기질 정보
        aqi = cyberpi.cloud.air('aqi', '5513')
        pm25 = cyberpi.cloud.air('pm2.5', '5513')
        pm10 = cyberpi.cloud.air('pm10', '5513')
        co = cyberpi.cloud.air('co', '5513')

        # AQI에 따른 LED 색상 변경
        if aqi < 50:
            cyberpi.led.on(0, 0, 10, id=1)
        elif 50 <= aqi < 100:
            cyberpi.led.on(0, 10, 0, id=1)
        elif 100 <= aqi < 250:
            cyberpi.led.on(10, 10, 0, id=1)
        else:
            cyberpi.led.on(10, 0, 0, id=1)

        return aqi, pm25, pm10, co


# 응급 상황 감지 함수
def check_for_emergency():
    global emergency_detected, last_voice_command_time
    current_time = time.time()
    
    # 일정 시간 간격으로 음성인식 실행
    if current_time - last_voice_command_time > 10:  # 예: 10초마다 실행
        cyberpi.led.on(0, 0, 100, id=5)
        cyberpi.cloud.listen('korean', 2)
        cyberpi.led.off(id=5)
        result = cyberpi.cloud.listen_result()
        
        if '도와' in result or '살려' in result or '으아' in result or '끼야' in result:
            emergency_detected = True
            last_voice_command_time = current_time

def handle_emergency():
    # 응급 상황 처리 로직
    cyberpi.pocket.led_on(100, 0, 0)
    cyberpi.audio.set_vol(20)
    for i in range(30):
        cyberpi.audio.set_tempo(400)
        cyberpi.audio.play_until('level-up')
        flash_led_red_blue()
    emergency_detected = False  # 응급 상황 처리 후 상태 초기화

# 이동 및 회전 함수
def move_forward(duration=2):
    cyberpi.pocket.servo_set(90, "S1")
    cyberpi.pocket.motor_set(30, "M1")
    time.sleep(duration)

def turn(angle, duration=2):
    cyberpi.pocket.servo_set(angle, "S1")
    cyberpi.pocket.motor_set(30, "M1")
    time.sleep(duration)
    cyberpi.pocket.servo_set(90, "S1")

def reverse(duration=2):
    cyberpi.pocket.servo_set(90, "S1")
    cyberpi.pocket.motor_set(-30, "M1")
    time.sleep(duration)

# 장애물 감지 및 회피
def obstacle_avoidance():
    global moving_forward
    if cyberpi.ranging_sensor.get(index=1) < 20:
        cyberpi.pocket.motor_set(0, "M1")
        time.sleep(1)
        reverse(2)
        # 좌회전 또는 우회전을 무작위로 선택
        if random.randint(1, 2) == 1:
            last_turn_angle = 65
            turn(last_turn_angle)
        else:
            last_turn_angle = 115
            turn(last_turn_angle)


         # 반대 방향으로 회전
        if last_turn_angle == 65:
            turn(115)
        else:
            turn(65)

# LED 스트립에 빨간색과 파란색이 번갈아 점등
def flash_led_red_blue():
    count = 0
    while count < 30:
        for i in range(36):
            if i % 2 == 0:
                cyberpi.pocket.led_on(100, 0, 0, i, "S2")  # 빨간색
            else:
                cyberpi.pocket.led_on(0, 0, 100, i, "S2")  # 파란색
        time.sleep(0.1)

        for i in range(36):
            if i % 2 == 0:
                cyberpi.pocket.led_on(0, 0, 100, i, "S2")  # 파란색
            else:
                cyberpi.pocket.led_on(100, 0, 0, i, "S2")  # 빨간색
        time.sleep(0.1)
        count += 1
    cyberpi.pocket.led_off('all', 'S2')

# 낮과 밤에 따른 LED 색상 변경
def day_night_led():
    brightness = cyberpi.get_bri()
    if brightness < 6:
        cyberpi.pocket.led_on(100, 100, 100, 'all', 'S2')
    else:
        cyberpi.pocket.led_off('all', 'S2')

# 프로그램 시작
@event.start
def on_start():
    global moving_forward, emergency_detected
    
    while True:
        check_for_emergency()
        obstacle_avoidance()

        if emergency_detected:
            handle_emergency()

        if moving_forward:
            move_forward()

        day_night_led()
        get_weather_and_air_quality()
        cyberpi.display.clear()
        time.sleep(2)
